{ config, pkgs, lib, ... }: {
  imports = [
    /etc/nixos/hardware-configuration.nix # generated by nixos-infect 
    /etc/nixos/networking.nix # generated at runtime by nixos-infect
  ];
  
#  nixpkgs.config.allowUnfree = true;

  nix = {
      package = pkgs.nixUnstable; # or versioned attributes like nix_2_4
      extraOptions = ''
        max-jobs = 1
        experimental-features = nix-command flakes
        trusted-substituters = https://lean4.cachix.org/
        trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= lean4.cachix.org-1:mawtxSxcaiWE24xCXXgh3qnvlTkyU7evRRnGeAhD4Wk=
        allow-import-from-derivation = true
        keep-outputs = true
        allow-import-from-derivation = true
      '';
  };


  virtualisation = {
    podman = {
      enable = true;
      # Create a `docker` alias for podman,
      # to use it as a drop-in replacement
      dockerCompat = true;
    };
  };

  # virtualisation.docker.enable = true;
  programs.mosh = { enable = true; };
  environment.systemPackages = with pkgs; [ neovim git tmux emacs-nox 
     cowsay fzf sbcl
     wget aria2 nix-tree exa fd procs sd dust ripgrep bottom
     delta stack ncdu wireguard-tools
     php fcgi php81Extensions.mbstring php81Extensions.intl php81Extensions.mysqlnd
  ];
	security.acme = {
		acceptTerms = true;
		email = "siddu.druid@gmail.com";
	};

        # 8096, 8920 = jellyfin
        # 4200 = shellinabox
        # 8000 = quick python debugging.
	networking.firewall.allowedTCPPorts = [ 80 443 8096 8920 4200 8000 9999];
        networking.firewall.allowedUDPPorts = [ 1900 7359 4200 8000 9999];
        services.mysql = {
          enable = true;
          package = pkgs.mariadb;
          ensureUsers = [
            {
              name = "icfp24";
              ensurePermissions = {
                "ICFP24.*" = "ALL PRIVILEGES";
              };
            }
          ];
        };
        # pool for icfp24
        services.phpfpm.phpOptions = ''
          display_errors = on;
          log_errors = on;
        '';
        users.users.icfp24 = {
          isSystemUser = true;
          createHome = true;
          home = "/var/icfp24/";
          group  = "icfp24";
        };
        users.groups.icfp24 = {};

        services.phpfpm.pools.icfp24 = {
          user = "icfp24";
          group = "icfp24";
          # listen = "9999";
          # phpPackage = pkgs.php;
          settings = {
            pm = "dynamic";            
            "listen.owner" = config.services.nginx.user;
            "pm.max_children" = 5;
            "pm.start_servers" = 2;
            "pm.min_spare_servers" = 1;
            "pm.max_spare_servers" = 3;
            "pm.max_requests" = 500;
          };
        };
        services.thelounge = {
            port = 6789;
            enable = true;
        };
	services.nginx = {
                enable = true;
                enableReload = true;
                recommendedTlsSettings = true;
                recommendedOptimisation = true;
                recommendedGzipSettings = true;
                recommendedProxySettings = true;

                virtualHosts = {
                        "pixel-druid.com" = { 
				locations."/".root = "/var/blog/out";
				addSSL = true;
				enableACME = true;
			};
			"icfp24.pixel-druid.com" = {
                              root = "/var/icfp24/";
                              # extraConfig = ''
                              #     try_files $uri $uri/ /index.php?url=$uri&$args;
                              # '';
                              locations."/" = {
                                root = "/var/icfp24/";
                                extraConfig = ''
                                    try_files $uri $uri/ /index.php?$args;
                                    rewrite ^ /index.php;
                                '';
                              };
                              locations."~ \\.php$" = {
                                # https://nixos.wiki/wiki/Phpfpm
                                extraConfig = ''
                                  fastcgi_split_path_info ^(.+\.php)(/.+)$;
                                  fastcgi_pass  unix:${config.services.phpfpm.pools.icfp24.socket};
                                  fastcgi_index index.php;
                                  include ${pkgs.nginx}/conf/fastcgi_params;
                                  include ${pkgs.nginx}/conf/fastcgi.conf;
                                '';
                              };
                              addSSL = true;
                              enableACME = true;
			};
			"irc.pixel-druid.com" = {
				locations."/".proxyPass = "http://127.0.0.1:" + (builtins.toString config.services.thelounge.port);
				addSSL = true;
				enableACME = true;
			};
                        # Username jellyfin, no password (leave password field blank)
                        # jellyfin config folder: /var/lib/jellyfin
                        # jellyfin data folder: 
			"jellyfin.pixel-druid.com" = {
				locations."/".proxyPass = "http://127.0.0.1:8096";
				enableACME = true;
			};
                        "shellinabox.pixel-druid.com" = {
				locations."/".proxyPass = "http://127.0.0.1:4200";
				enableACME = true;
			};
		};
	};
  boot.cleanTmpDir = true;
  networking.hostName = "ubuntu-s-1vcpu-1gb-blr1-01";
  services.openssh.enable = true;
  services.jellyfin.enable = true;
  services.jellyfin.openFirewall = true;
  services.shellinabox.enable = true;

  systemd.services.rclone = {
    description = "service to run the rclone mount for premiumize";
    wantedBy = ["multi-user.target"];
    path = [ pkgs.rclone ];
    script = ''
    rclone --allow-other --dir-perms=0777 --file-perms=0555 --config /root/.config/rclone/rclone.conf mount premiumize: /root/Movies/premiumize
    '';
    serviceConfig = {
      type = "simple";
      Restart = "on-failure";
    };
  };
  
  # services.openvpn.servers = { vpn = { config = ''/root/openvpn/vpn.conf''; };
  nixpkgs.config.permittedInsecurePackages = [
    "openssl-1.0.2u"
  ];

  users.users.root.openssh.authorizedKeys.keys = [
    "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCwy5IMkH2IqMbDwpWmbg9Z2CETZqvpAe9sL+6G+netUjWlr8qDPVQbbeqthm8Nnu3lr9FRDCQ+wgkqZdFKfN8zCSEhSs036+ywSi3Th/a16UaPcMboRl8AIebL/CHW9i6BQmtYOEpIeEele2KUJ+Us4yQyZeE0boRHUtWstcQlRqBV8OT4mf7eP2OAl6ClxBQwHDhj93DlMyfHGbFtH8Hj2IUHCQDszwBRRYjvdv29QC1SJ1SH0SEn7uyjIHo6E01g5JdQDWc8wtIlcnmPMkCCzrDHKM7sCGm8pvKiyJ37ofaG/Zt6zoJGAmRYdQnkmPMUqFdK7MEP8V6hsCdliXQheuL3Ppjw8nZWlAU8nE4HtAFovgkCmgMGeMs1MffyC8ozoXMCtNUUlQD3guqMy9fBEGCOghHUaD/nyxLu/8TipKik04yY8nE2zf/4hEbAjsSfrZalhCMSrBs1x+LFitA2d5UFexUSN+/+fOZd5mMlAt0KOIJPGCX2IDtldJuPeu0= bollu@DESKTOP-J9URRFN" 
  ];
}
